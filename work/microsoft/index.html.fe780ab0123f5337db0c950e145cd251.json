{"head":{"title":"Microsoft","subtitle":"Program Management","date":"2016-02","layout":"Post","size":"large","image":"microsoft.jpg","description":"Microsoft My first full time job out of college was a Program Manager position at Microsoft. I was part of the Web Platform team working on…"},"body":"<h1 id=\"microsoft\"><a href=\"#microsoft\" class=\"phenomic-HeadingAnchor\">#</a>Microsoft</h1>\n<p>My first full time job out of college was a Program Manager position at Microsoft. I was part of the Web Platform team working on <a href=\"https://developer.microsoft.com/en-us/windows/bridges/hosted-web-apps\">JavaScript bridge for Universal Windows Apps</a>. While most of my time was spent on improving the Edge/WebApp platform and analyzing telemetry, I had the opportunity to work on some public facing projects like the ones below:</p>\n<div class=\"spacer\" />\n<h2 id=\"cloudappx\"><a href=\"#cloudappx\" class=\"phenomic-HeadingAnchor\">#</a>CloudAppX</h2>\n<p>When I joined the team, developing Universal Windows Platform (UWP) Apps was essentially only possible on Windows 10 machines. CloudAppX started out as an idea I had to enable devs to develop and submit UWP Apps on any platform (e.g. MacOS, Linux, Windows 8.1 and older, etc.)</p>\n<p>Developers who could stand to benefit from this include:</p>\n<ul>\n<li>Mac developers who are building apps for multiple platforms at once.</li>\n<li>Xbox, Windows 10 Mobile, and Windows 10 IoT developers.</li>\n<li>Web developers who want to submit their site to the Store as hosted apps (particularly if they take advantage of any Windows 10 APIs).</li>\n</ul>\n<p><img src=\"/assets/hwa.png\" alt=\"Hosted Web Apps\"></p>\n<p>I quickly coded up a prototype of the idea that worked by having the cloud call our build tools. The prototype was eventually developed on directly by one of our partner teams. It was deployed to production and is now used by the open source <a href=\"http://manifoldjs.com/\">ManifoldJS</a> project. ManifoldJS is currently the <a href=\"https://msdn.microsoft.com/windows/uwp/porting/hwa-create-mac\">recommended way to develop UWP's on macOS</a>. Our team also published a <a href=\"https://channel9.msdn.com/Blogs/One-Dev-Minute/Publishing-a-UWP-Web-App-on-a-Mac-using-ManifoldJS\">Channel 9 Video</a> showing the service in action with ManifoldJS.</p>\n<div class=\"spacer\" />\n<h2 id=\"universal-windows-platform-tooling\"><a href=\"#universal-windows-platform-tooling\" class=\"phenomic-HeadingAnchor\">#</a>Universal Windows Platform Tooling</h2>\n<p>Visual Studio is a very powerful, full-featured IDE. However, it includes support for a large number of features that a lot of web-developers (myself included) don't need. This results in a 4GB - 10GB install and very long start up times.</p>\n<p>We wanted to remove friction from the Universal Windows Platform App development process. So I built some tooling to make the process more friendly to web developers.</p>\n<h3 id=\"hwa\"><a href=\"#hwa\" class=\"phenomic-HeadingAnchor\">#</a>hwa</h3>\n<p>I created a CLI utility called <a href=\"https://www.npmjs.com/package/hwa\">hwa</a> that allowed developers to launch their UWP's directly. Prior to this, the only simple way to debug UWP apps was through Visual Studio—something potentially unappealing to web developers.</p>\n<p>This is particularly convenient for developers who are building apps with a remote start page. They can simply install the tool globally:</p>\n<pre><code class=\"hljs language-bash\">npm i -g hwa</code></pre>\n<p>And they can run</p>\n<pre><code class=\"hljs language-bash\">hwa</code></pre>\n<p>to load a 'Testbed' style app that allows them to dynamically change URLs, or if their app depends on having a specific URL as the origin, they can run:</p>\n<pre><code class=\"hljs language-bash\">hwa https://example.com</code></pre>\n<p>and if they want to include it in their build system (e.g. through an npm script), the module provides the following functions:</p>\n<pre><code class=\"hljs language-JavaScript\"><span class=\"hljs-comment\">// import the module</span>\n<span class=\"hljs-keyword\">import</span> { updateStartpage, registerApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'hwa'</span>;\n<span class=\"hljs-comment\">// update the start page</span>\nupdateStartpage(<span class=\"hljs-string\">'https://example.com'</span>);\n<span class=\"hljs-comment\">// launch the app</span>\nregisterApp();</code></pre>\n<p>The tool is currently used in both <a href=\"https://msdn.microsoft.com/windows/uwp/porting/hwa-create-mac\">ManifoldJS</a> and the <a href=\"#appx-yeoman-generator\">AppX Yeoman Generator</a>.</p>\n<h3 id=\"appx-yeoman-generator\"><a href=\"#appx-yeoman-generator\" class=\"phenomic-HeadingAnchor\">#</a>AppX Yeoman Generator</h3>\n<p><em>Disclaimer: Several of the technical decisions made for this project are somewhat outdated. This is likely due to a combination of my personal growth as a developer and the rapidly changing web development landscape.</em>\n<img src=\"/assets/yoappx.gif\" alt=\"Yo Appx\">\nThe <a href=\"https://github.com/MicrosoftEdge/generator-appx\">AppX Yeoman Generator</a> is a Yeoman Generator aimed towards more beginner-level developers who are looking to write a UWP. Initially, I had created a few gulp tasks to create a demo Hosted Web App that was shown at <a href=\"https://youtu.be/dDhHIkWKoWw?t=2445\">Mobile World Congress</a>.</p>\n<p>My team decided that it would be good to create a project scaffold for developers interested in building apps for our platform and that we could use the demo app as a starting point. I ended up creating a Yeoman generator using the demo as a base. I also worked with the Channel 9 team to create an <a href=\"https://channel9.msdn.com/Blogs/One-Dev-Minute/Building-Websites-and-UWP-Apps-with-a-Yeoman-Generator\">instructional video</a>.</p>\n<p>Looking back, the project could probably have been reduced to only webpack and a few npm scripts. However, at the time, the team wanted to accommodate beginner developers who were used to simply linking their assets in their HTML without having to modify the webpack config.</p>\n<div class=\"spacer\" />\n<h2 id=\"npm-dev-blogs\"><a href=\"#npm-dev-blogs\" class=\"phenomic-HeadingAnchor\">#</a>npm Dev Blogs</h2>\n<p>At a SeattleJS meetup, I met an npm employee who mentioned that they were interested in working with Microsoft. The next day, I sent him and email and was introduced to Rod, one of the npm co-founders.</p>\n<p>We learned that over 40% of the visitors to npm's page are on Windows. Ultimately, we ended up coming to an arrangement where people from Microsoft would create guest posts on npm's site to promote cross platform web app and website development using npm.</p>\n<ul>\n<li><a href=\"https://blogs.windows.com/msedgedev/2015/10/15/building-sites-and-web-apps-for-every-device-guest-series-for-npm/\">Announcement Post</a></li>\n<li><a href=\"http://blog.npmjs.org/post/131244760570/guest-post-build-for-devices\">Guest Post 1</a></li>\n<li><a href=\"http://blog.npmjs.org/post/132110321170/guest-post-building-resilient-web-apps\">Guest Post 2</a></li>\n</ul>\n","__filename":"work/microsoft.md","__url":"/work/microsoft/","__resourceUrl":"/work/microsoft/index.html","__dataUrl":"/work/microsoft/index.html.fe780ab0123f5337db0c950e145cd251.json"}