/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
/* line 9, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
/* line 19, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
/* line 45, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
/* line 57, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
/* line 67, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
/* line 78, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
/* line 89, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
/* line 98, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
/* line 109, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
/* line 118, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
/* line 126, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
/* line 135, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
/* line 144, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
/* line 153, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
/* line 162, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

/* line 169, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
sup {
  top: -0.5em; }

/* line 173, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
/* line 184, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
/* line 192, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
/* line 203, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
/* line 211, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
/* line 221, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
/* line 232, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
/* line 256, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
/* line 266, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
/* line 278, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
/* line 293, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
/* line 303, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
/* line 312, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
/* line 322, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
/* line 335, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
/* line 347, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
/* line 357, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
/* line 371, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
/* line 379, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
/* line 390, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
/* line 399, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
/* line 408, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
/* line 419, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/* line 425, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
td, th {
  padding: 0; }

/* line 1, /Users/alexlu/Documents/Other/alx.lu/src/css/_hero.scss */
.backgroundImage {
  background: url("../img/BackgroundBare.jpg") no-repeat center center;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-perspective: 1000;
          perspective: 1000;
  background-size: cover;
  top: 0; }

/* line 9, /Users/alexlu/Documents/Other/alx.lu/src/css/_hero.scss */
.parallax-parent {
  height: 60vh;
  overflow: hidden; }

/* line 14, /Users/alexlu/Documents/Other/alx.lu/src/css/_hero.scss */
.parallax-parent > * {
  height: 200%;
  position: relative;
  top: -100%; }

/* line 20, /Users/alexlu/Documents/Other/alx.lu/src/css/_hero.scss */
#title {
  z-index: 10;
  width: 394px;
  height: 1.5em;
  font: 300 500%/1.2 'Didot', 'Bodoni MT', serif;
  margin: auto;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0; }

/* line 33, /Users/alexlu/Documents/Other/alx.lu/src/css/_hero.scss */
#titleText {
  font-family: 'Didot', 'Bodoni MT', serif;
  fill: url(#textBg); }

/* line 38, /Users/alexlu/Documents/Other/alx.lu/src/css/_hero.scss */
#subTitle {
  font-family: 'Didot', 'Bodoni MT', serif;
  font-size: 130%;
  text-align: center;
  position: absolute;
  bottom: 250px;
  width: 100%;
  color: gray; }

/* line 48, /Users/alexlu/Documents/Other/alx.lu/src/css/_hero.scss */
#heroImage {
  width: 100%;
  height: 100%;
  top: 0;
  position: absolute; }

/* line 55, /Users/alexlu/Documents/Other/alx.lu/src/css/_hero.scss */
.proof {
  position: absolute;
  height: 5%;
  width: 3%;
  opacity: .2;
  z-index: 1000000; }

/* line 63, /Users/alexlu/Documents/Other/alx.lu/src/css/_hero.scss */
.pr-top {
  border-bottom: 1px solid black;
  top: 2%; }

/* line 68, /Users/alexlu/Documents/Other/alx.lu/src/css/_hero.scss */
.pr-bottom {
  border-top: 1px solid black;
  bottom: 2%; }

/* line 73, /Users/alexlu/Documents/Other/alx.lu/src/css/_hero.scss */
.pr-left {
  border-right: 1px solid black;
  left: 2%; }

/* line 78, /Users/alexlu/Documents/Other/alx.lu/src/css/_hero.scss */
.pr-right {
  border-left: 1px solid black;
  right: 2%; }

/* line 1, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
#navbar {
  width: 100%;
  height: 125px;
  display: block;
  position: absolute;
  background: white;
  font-size: 120%;
  z-index: 1000;
  font-family: 'Didot', 'Bodoni MT', serif; }

/* line 12, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
#navcontainer {
  margin: auto;
  margin-top: 85px;
  width: 80%;
  max-width: 1080px; }

/* line 19, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
.navmenu {
  list-style-type: none;
  padding: 0;
  margin: 0 auto;
  text-align: justify;
  width: 100%; }

/* line 27, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
.navmenu li {
  width: 150px;
  height: 100px;
  display: inline-block;
  text-align: center; }

/* line 34, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
.navmenu:after {
  content: '';
  width: 100%;
  display: inline-block; }

/* line 40, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
.navmenu li a {
  text-decoration: none;
  color: black; }

/* line 45, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
.navmenu li a:hover {
  text-decoration: underline; }

/* line 1, /Users/alexlu/Documents/Other/alx.lu/src/css/_work.scss */
#workcontainer {
  margin: 200px auto;
  vertical-align: middle; }

/* line 6, /Users/alexlu/Documents/Other/alx.lu/src/css/_work.scss */
.workobject {
  display: inline-block;
  width: 360px;
  height: 237px;
  background-size: cover;
  white-space: nowrap;
  vertical-align: middle; }

/* line 15, /Users/alexlu/Documents/Other/alx.lu/src/css/_work.scss */
.workobject-lg {
  width: 720px;
  height: 474px; }

/* line 20, /Users/alexlu/Documents/Other/alx.lu/src/css/_work.scss */
.workobject > .workname > .worktext {
  line-height: 237px; }

/* line 24, /Users/alexlu/Documents/Other/alx.lu/src/css/_work.scss */
.workobject-lg > .workname > .worktext {
  line-height: 474px; }

/* line 28, /Users/alexlu/Documents/Other/alx.lu/src/css/_work.scss */
.workname {
  transition: all 0.2s ease;
  vertical-align: middle;
  width: calc(100% + 1px);
  height: 100%;
  text-decoration: none;
  color: black;
  opacity: 1;
  font: 20px Helvetica, Times, serif;
  font-weight: 100;
  max-height: 0%;
  background-color: white; }

/* line 42, /Users/alexlu/Documents/Other/alx.lu/src/css/_work.scss */
.worktext {
  padding-left: 30px;
  opacity: 0; }
  /* line 45, /Users/alexlu/Documents/Other/alx.lu/src/css/_work.scss */
  .worktext:hover {
    transition-delay: 0.1s;
    opacity: 1; }

/* line 51, /Users/alexlu/Documents/Other/alx.lu/src/css/_work.scss */
.worktext > span {
  display: inline-block;
  vertical-align: middle;
  line-height: normal; }

/* line 57, /Users/alexlu/Documents/Other/alx.lu/src/css/_work.scss */
.description {
  text-transform: uppercase;
  font-size: 12px;
  font-weight: 600; }

/* line 63, /Users/alexlu/Documents/Other/alx.lu/src/css/_work.scss */
.workname:hover {
  max-height: 100%; }

/* line 7, /Users/alexlu/Documents/Other/alx.lu/src/css/app.scss */
body {
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0); }

/* line 11, /Users/alexlu/Documents/Other/alx.lu/src/css/app.scss */
#content {
  background-color: white;
  width: 100%;
  height: 900px;
  position: absolute; }


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jc3MiLCJfbm9ybWFsaXplLnNjc3MiLCJfaGVyby5zY3NzIiwiX3ZhcmlhYmxlcy5zY3NzIiwiX25hdmJhci5zY3NzIiwiX3dvcmsuc2NzcyIsImFwcC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDREQUE0RDtBQUM1RDs7OztHQUlHO0FBQ0gsMEVBQTBFO0FDRTFFO0VBQ2Usd0JBQUE7RURBYixPQUFPO0VDQ2UsMkJBQUE7RURDdEIsT0FBTztFQ0FtQiwrQkFBQTtFREUxQixPQUFPLEVBQUU7O0FBRVg7O0dBRUc7QUFDSCwyRUFBMkU7QUNBM0U7RUFDRSxVQUFRLEVBQUE7O0FER1Y7Z0ZBQ2dGO0FBQ2hGOzs7OztHQUtHO0FBQ0gsMkVBQTJFO0FDRXRDO0VBYTFCLGVBQUEsRUFBQTs7QURYWDs7O0dBR0c7QUFDSCwyRUFBMkU7QUNlcEU7RUFJSSxzQkFBQTtFRGhCVCxPQUFPO0VDaUJQLHlCQUFnQjtFRGZoQixPQUFPLEVBQUU7O0FBRVg7OztHQUdHO0FBQ0gsMkVBQTJFO0FDaUIzRTtFQUNXLGNBQUE7RUFDRCxVQUFBLEVBQUE7O0FEZFY7OztHQUdHO0FBQ0gsMkVBQTJFO0FDa0JqRTtFQUVDLGNBQUEsRUFBQTs7QURoQlg7Z0ZBQ2dGO0FBQ2hGOztHQUVHO0FBQ0gsMkVBQTJFO0FDcUIzRTtFQUNFLDhCQUFrQixFQUFBOztBRGxCcEI7O0dBRUc7QUFDSCwyRUFBMkU7QUNzQmpFO0VBRVIsV0FBUyxFQUFBOztBRHBCWDtnRkFDZ0Y7QUFDaEY7O0dBRUc7QUFDSCw0RUFBNEU7QUN5QjVFO0VBQ0UsMEJBQWUsRUFBQTs7QUR0QmpCOztHQUVHO0FBQ0gsNEVBQTRFO0FDMEI1RTtFQUVFLGtCQUFhLEVBQUE7O0FEeEJmOztHQUVHO0FBQ0gsNEVBQTRFO0FDNEI1RTtFQUNFLG1CQUFZLEVBQUE7O0FEekJkOzs7R0FHRztBQUNILDRFQUE0RTtBQzZCNUU7RUFDYSxlQUFBO0VBQ0gsaUJBQUEsRUFBQTs7QUQxQlY7O0dBRUc7QUFDSCw0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QXNFO0FLNWV0RTtFQUNFLGlCQUFZLEVBQUE7O0FMK2VkLG1FQUFtRTtBTXhpQm5FO0VBQ2Esd0NBQUE7VUFBQSxnQ0FBQSxFQUFBOztBTjJpQmIsb0VBQW9FO0FNeGlCcEU7RUFDRSx3QkFBa0I7RUFDbEIsWUFBTztFQUNQLGNBQVE7RUFDUixtQkFBVSxFQUFBIiwiZmlsZSI6ImFwcC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2My4wLjIgfCBNSVQgTGljZW5zZSB8IGdpdC5pby9ub3JtYWxpemUgKi9cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xuICogICAgdXNlciB6b29tLlxuICovXG4vKiBsaW5lIDksIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19ub3JtYWxpemUuc2NzcyAqL1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG4vKiBsaW5lIDE5LCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cbi8qIGxpbmUgNDUsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19ub3JtYWxpemUuc2NzcyAqL1xuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWFpbiwgbWVudSwgbmF2LCBzZWN0aW9uLCBzdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG4vKiBsaW5lIDU3LCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbmF1ZGlvLCBjYW52YXMsIHByb2dyZXNzLCB2aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICovXG4vKiBsaW5lIDY3LCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuLyogbGluZSA3OCwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG5baGlkZGVuXSwgdGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuLyogbGluZSA4OSwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cbiAqL1xuLyogbGluZSA5OCwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG5hOmFjdGl2ZSwgYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuLyogbGluZSAxMDksIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19ub3JtYWxpemUuc2NzcyAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyB9XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG4vKiBsaW5lIDExOCwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG5iLCBzdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuLyogbGluZSAxMjYsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19ub3JtYWxpemUuc2NzcyAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG4vKiBsaW5lIDEzNSwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xuLyogbGluZSAxNDQsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19ub3JtYWxpemUuc2NzcyAqL1xubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbi8qIGxpbmUgMTUzLCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbi8qIGxpbmUgMTYyLCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbnN1Yiwgc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKiBsaW5lIDE2OSwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBsaW5lIDE3MywgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gKi9cbi8qIGxpbmUgMTg0LCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbmltZyB7XG4gIGJvcmRlcjogMDsgfVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG4vKiBsaW5lIDE5MiwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cbi8qIGxpbmUgMjAzLCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gKi9cbi8qIGxpbmUgMjExLCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbmhyIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICovXG4vKiBsaW5lIDIyMSwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuLyogbGluZSAyMzIsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19ub3JtYWxpemUuc2NzcyAqL1xuY29kZSwga2JkLCBwcmUsIHNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuICovXG4vKipcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG4vKiBsaW5lIDI1NiwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG5idXR0b24sIGlucHV0LCBvcHRncm91cCwgc2VsZWN0LCB0ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuLyogbGluZSAyNjYsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19ub3JtYWxpemUuc2NzcyAqL1xuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuLyogbGluZSAyNzgsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19ub3JtYWxpemUuc2NzcyAqL1xuYnV0dG9uLCBzZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cbi8qIGxpbmUgMjkzLCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbmJ1dHRvbiwgaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCBpbnB1dFt0eXBlPVwicmVzZXRcIl0sIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC8qIDMgKi8gfVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cbi8qIGxpbmUgMzAzLCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbmJ1dHRvbltkaXNhYmxlZF0sIGh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0OyB9XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICovXG4vKiBsaW5lIDMxMiwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsIGlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cbi8qIGxpbmUgMzIyLCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cbi8qIGxpbmUgMzM1LCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSwgaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuLyogbGluZSAzNDcsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19ub3JtYWxpemUuc2NzcyAqL1xuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiwgaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZVxuICogICAgKGluY2x1ZGUgYC1tb3pgIHRvIGZ1dHVyZS1wcm9vZikuXG4gKi9cbi8qIGxpbmUgMzU3LCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAyICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyB9XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cbi8qIGxpbmUgMzcxLCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cbi8qIGxpbmUgMzc5LCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG4vKiBsaW5lIDM5MCwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuLyogbGluZSAzOTksIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19ub3JtYWxpemUuc2NzcyAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG4vKiBsaW5lIDQwOCwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICovXG4vKiBsaW5lIDQxOSwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25vcm1hbGl6ZS5zY3NzICovXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbi8qIGxpbmUgNDI1LCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbm9ybWFsaXplLnNjc3MgKi9cbnRkLCB0aCB7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyogbGluZSAxLCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9faGVyby5zY3NzICovXG4uYmFja2dyb3VuZEltYWdlIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL0JhY2tncm91bmRCYXJlLmpwZ1wiKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICBwZXJzcGVjdGl2ZTogMTAwMDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgdG9wOiAwOyB9XG5cbi8qIGxpbmUgOSwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX2hlcm8uc2NzcyAqL1xuLnBhcmFsbGF4LXBhcmVudCB7XG4gIGhlaWdodDogNjB2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBsaW5lIDE0LCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9faGVyby5zY3NzICovXG4ucGFyYWxsYXgtcGFyZW50ID4gKiB7XG4gIGhlaWdodDogMjAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC0xMDAlOyB9XG5cbi8qIGxpbmUgMjAsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19oZXJvLnNjc3MgKi9cbiN0aXRsZSB7XG4gIHotaW5kZXg6IDEwO1xuICB3aWR0aDogMzk0cHg7XG4gIGhlaWdodDogMS41ZW07XG4gIGZvbnQ6IDMwMCA1MDAlLzEuMiAnRGlkb3QnLCAnQm9kb25pIE1UJywgc2VyaWY7XG4gIG1hcmdpbjogYXV0bztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7IH1cblxuLyogbGluZSAzMywgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX2hlcm8uc2NzcyAqL1xuI3RpdGxlVGV4dCB7XG4gIGZvbnQtZmFtaWx5OiAnRGlkb3QnLCAnQm9kb25pIE1UJywgc2VyaWY7XG4gIGZpbGw6IHVybCgjdGV4dEJnKTsgfVxuXG4vKiBsaW5lIDM4LCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9faGVyby5zY3NzICovXG4jc3ViVGl0bGUge1xuICBmb250LWZhbWlseTogJ0RpZG90JywgJ0JvZG9uaSBNVCcsIHNlcmlmO1xuICBmb250LXNpemU6IDEzMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDI1MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgY29sb3I6IGdyYXk7IH1cblxuLyogbGluZSA0OCwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX2hlcm8uc2NzcyAqL1xuI2hlcm9JbWFnZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRvcDogMDtcbiAgcG9zaXRpb246IGFic29sdXRlOyB9XG5cbi8qIGxpbmUgNTUsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19oZXJvLnNjc3MgKi9cbi5wcm9vZiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiA1JTtcbiAgd2lkdGg6IDMlO1xuICBvcGFjaXR5OiAuMjtcbiAgei1pbmRleDogMTAwMDAwMDsgfVxuXG4vKiBsaW5lIDYzLCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9faGVyby5zY3NzICovXG4ucHItdG9wIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xuICB0b3A6IDIlOyB9XG5cbi8qIGxpbmUgNjgsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19oZXJvLnNjc3MgKi9cbi5wci1ib3R0b20ge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgYmxhY2s7XG4gIGJvdHRvbTogMiU7IH1cblxuLyogbGluZSA3MywgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX2hlcm8uc2NzcyAqL1xuLnByLWxlZnQge1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCBibGFjaztcbiAgbGVmdDogMiU7IH1cblxuLyogbGluZSA3OCwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX2hlcm8uc2NzcyAqL1xuLnByLXJpZ2h0IHtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCBibGFjaztcbiAgcmlnaHQ6IDIlOyB9XG5cbi8qIGxpbmUgMSwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25hdmJhci5zY3NzICovXG4jbmF2YmFyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTI1cHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBmb250LXNpemU6IDEyMCU7XG4gIHotaW5kZXg6IDEwMDA7XG4gIGZvbnQtZmFtaWx5OiAnRGlkb3QnLCAnQm9kb25pIE1UJywgc2VyaWY7IH1cblxuLyogbGluZSAxMiwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25hdmJhci5zY3NzICovXG4jbmF2Y29udGFpbmVyIHtcbiAgbWFyZ2luOiBhdXRvO1xuICBtYXJnaW4tdG9wOiA4NXB4O1xuICB3aWR0aDogODAlO1xuICBtYXgtd2lkdGg6IDEwODBweDsgfVxuXG4vKiBsaW5lIDE5LCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fbmF2YmFyLnNjc3MgKi9cbi5uYXZtZW51IHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDAgYXV0bztcbiAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLyogbGluZSAyNywgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25hdmJhci5zY3NzICovXG4ubmF2bWVudSBsaSB7XG4gIHdpZHRoOiAxNTBweDtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLyogbGluZSAzNCwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX25hdmJhci5zY3NzICovXG4ubmF2bWVudTphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qIGxpbmUgNDAsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19uYXZiYXIuc2NzcyAqL1xuLm5hdm1lbnUgbGkgYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IGJsYWNrOyB9XG5cbi8qIGxpbmUgNDUsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL19uYXZiYXIuc2NzcyAqL1xuLm5hdm1lbnUgbGkgYTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG5cbi8qIGxpbmUgMSwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX3dvcmsuc2NzcyAqL1xuI3dvcmtjb250YWluZXIge1xuICBtYXJnaW46IDIwMHB4IGF1dG87XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cblxuLyogbGluZSA2LCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fd29yay5zY3NzICovXG4ud29ya29iamVjdCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDM2MHB4O1xuICBoZWlnaHQ6IDIzN3B4O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbi8qIGxpbmUgMTUsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL193b3JrLnNjc3MgKi9cbi53b3Jrb2JqZWN0LWxnIHtcbiAgd2lkdGg6IDcyMHB4O1xuICBoZWlnaHQ6IDQ3NHB4OyB9XG5cbi8qIGxpbmUgMjAsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL193b3JrLnNjc3MgKi9cbi53b3Jrb2JqZWN0ID4gLndvcmtuYW1lID4gLndvcmt0ZXh0IHtcbiAgbGluZS1oZWlnaHQ6IDIzN3B4OyB9XG5cbi8qIGxpbmUgMjQsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL193b3JrLnNjc3MgKi9cbi53b3Jrb2JqZWN0LWxnID4gLndvcmtuYW1lID4gLndvcmt0ZXh0IHtcbiAgbGluZS1oZWlnaHQ6IDQ3NHB4OyB9XG5cbi8qIGxpbmUgMjgsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL193b3JrLnNjc3MgKi9cbi53b3JrbmFtZSB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKyAxcHgpO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IGJsYWNrO1xuICBvcGFjaXR5OiAxO1xuICBmb250OiAyMHB4IEhlbHZldGljYSwgVGltZXMsIHNlcmlmO1xuICBmb250LXdlaWdodDogMTAwO1xuICBtYXgtaGVpZ2h0OiAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cblxuLyogbGluZSA0MiwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX3dvcmsuc2NzcyAqL1xuLndvcmt0ZXh0IHtcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICBvcGFjaXR5OiAwOyB9XG4gIC8qIGxpbmUgNDUsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL193b3JrLnNjc3MgKi9cbiAgLndvcmt0ZXh0OmhvdmVyIHtcbiAgICB0cmFuc2l0aW9uLWRlbGF5OiAwLjFzO1xuICAgIG9wYWNpdHk6IDE7IH1cblxuLyogbGluZSA1MSwgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX3dvcmsuc2NzcyAqL1xuLndvcmt0ZXh0ID4gc3BhbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG4vKiBsaW5lIDU3LCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9fd29yay5zY3NzICovXG4uZGVzY3JpcHRpb24ge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7IH1cblxuLyogbGluZSA2MywgL1VzZXJzL2FsZXhsdS9Eb2N1bWVudHMvT3RoZXIvYWx4Lmx1L3NyYy9jc3MvX3dvcmsuc2NzcyAqL1xuLndvcmtuYW1lOmhvdmVyIHtcbiAgbWF4LWhlaWdodDogMTAwJTsgfVxuXG4vKiBsaW5lIDcsIC9Vc2Vycy9hbGV4bHUvRG9jdW1lbnRzL090aGVyL2FseC5sdS9zcmMvY3NzL2FwcC5zY3NzICovXG5ib2R5IHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTsgfVxuXG4vKiBsaW5lIDExLCAvVXNlcnMvYWxleGx1L0RvY3VtZW50cy9PdGhlci9hbHgubHUvc3JjL2Nzcy9hcHAuc2NzcyAqL1xuI2NvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogOTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTsgfVxuXG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2My4wLjIgfCBNSVQgTGljZW5zZSB8IGdpdC5pby9ub3JtYWxpemUgKi9cblxuLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nXG4gKiAgICB1c2VyIHpvb20uXG4gKi9cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4gKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cblxuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4gKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlcjogMDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gKi9cblxuaHIge1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gIG1hcmdpbjogMDsgLyogMyAqL1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyOyAvKiAzICovXG59XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICovXG5cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZVxuICogICAgKGluY2x1ZGUgYC1tb3pgIHRvIGZ1dHVyZS1wcm9vZikuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDIgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbiAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3JkZXI6IDA7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKiBUYWJsZXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICovXG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwO1xufVxuIiwiLmJhY2tncm91bmRJbWFnZSB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9CYWNrZ3JvdW5kQmFyZS5qcGdcIikgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgcGVyc3BlY3RpdmU6IDEwMDA7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIHRvcDogMDtcbn1cblxuLnBhcmFsbGF4LXBhcmVudCB7XG4gIGhlaWdodDogNjB2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnBhcmFsbGF4LXBhcmVudCA+ICoge1xuICBoZWlnaHQ6IDIwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAtMTAwJTtcbn1cblxuI3RpdGxlIHtcbiAgei1pbmRleDogMTA7XG4gIHdpZHRoOiAzOTRweDtcbiAgaGVpZ2h0OiAxLjVlbTtcbiAgZm9udDogMzAwIDUwMCUvMS4yICRmb250LXN0YWNrO1xuICBtYXJnaW46IGF1dG87XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBib3R0b206IDA7XG4gIHJpZ2h0OiAwO1xufVxuXG4jdGl0bGVUZXh0IHtcbiAgZm9udC1mYW1pbHk6ICRmb250LXN0YWNrO1xuICBmaWxsOnVybCgjdGV4dEJnKTtcbn1cblxuI3N1YlRpdGxlIHtcbiAgZm9udC1mYW1pbHk6ICRmb250LXN0YWNrO1xuICBmb250LXNpemU6IDEzMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDI1MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgY29sb3I6IGdyYXk7XG59XG5cbiNoZXJvSW1hZ2Uge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0b3A6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cblxuLnByb29mIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDUlO1xuICB3aWR0aDogMyU7XG4gIG9wYWNpdHk6IC4yO1xuICB6LWluZGV4OiAxMDAwMDAwO1xufVxuXG4ucHItdG9wIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xuICB0b3A6IDIlO1xufVxuXG4ucHItYm90dG9tIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIGJsYWNrO1xuICBib3R0b206IDIlO1xufVxuXG4ucHItbGVmdCB7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIGJsYWNrO1xuICBsZWZ0OiAyJTtcbn1cblxuLnByLXJpZ2h0e1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkIGJsYWNrO1xuICByaWdodDogMiU7XG59XG4iLCIkZm9udC1zdGFjay10aXRsZTogJ0RpZG90JywgJ0JvZG9uaSBNVCcsIHNlcmlmO1xuJGZvbnQtc3RhY2s6ICdEaWRvdCcsICdCb2RvbmkgTVQnLCBzZXJpZjtcblxuJHdvcmtpdGVtLXdpZHRoOiAzNjBweDtcbiR3b3JraXRlbS1oZWlnaHQ6IDIzN3B4O1xuIiwiI25hdmJhciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEyNXB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgZm9udC1zaXplOiAxMjAlO1xuICB6LWluZGV4OiAxMDAwO1xuICBmb250LWZhbWlseTogJGZvbnQtc3RhY2stdGl0bGU7XG59XG5cbiNuYXZjb250YWluZXIge1xuICBtYXJnaW46IGF1dG87XG4gIG1hcmdpbi10b3A6IDg1cHg7XG4gIHdpZHRoOiA4MCU7XG4gIG1heC13aWR0aDogMTA4MHB4O1xufVxuXG4ubmF2bWVudSB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubmF2bWVudSBsaSB7XG4gIHdpZHRoOiAxNTBweDtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5uYXZtZW51OmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5uYXZtZW51IGxpIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLm5hdm1lbnUgbGkgYTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4iLCIjd29ya2NvbnRhaW5lciB7XG4gIG1hcmdpbjogMjAwcHggYXV0bztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLndvcmtvYmplY3Qge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAkd29ya2l0ZW0td2lkdGg7XG4gIGhlaWdodDogJHdvcmtpdGVtLWhlaWdodDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLndvcmtvYmplY3QtbGcge1xuICB3aWR0aDogJHdvcmtpdGVtLXdpZHRoICogMjtcbiAgaGVpZ2h0OiAkd29ya2l0ZW0taGVpZ2h0ICogMjtcbn1cblxuLndvcmtvYmplY3QgPiAud29ya25hbWUgPiAud29ya3RleHQge1xuICBsaW5lLWhlaWdodDogJHdvcmtpdGVtLWhlaWdodDtcbn1cblxuLndvcmtvYmplY3QtbGcgPiAud29ya25hbWUgPiAud29ya3RleHQge1xuICBsaW5lLWhlaWdodDogJHdvcmtpdGVtLWhlaWdodCAqIDI7XG59XG5cbi53b3JrbmFtZSB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKyAxcHgpO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IGJsYWNrO1xuICBvcGFjaXR5OiAxO1xuICBmb250OiAyMHB4IEhlbHZldGljYSwgVGltZXMsIHNlcmlmO1xuICBmb250LXdlaWdodDogMTAwO1xuICBtYXgtaGVpZ2h0OiAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbi53b3JrdGV4dCB7XG4gIHBhZGRpbmctbGVmdDogMzBweDtcbiAgb3BhY2l0eTogMDtcbiAgJjpob3ZlciB7XG4gICAgdHJhbnNpdGlvbi1kZWxheTogMC4xcztcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbi53b3JrdGV4dCA+IHNwYW4ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi5kZXNjcmlwdGlvbiB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLndvcmtuYW1lOmhvdmVyIHtcbiAgbWF4LWhlaWdodDogMTAwJTtcbn1cbiIsIkBpbXBvcnQgJ3ZhcmlhYmxlcyc7XG5AaW1wb3J0ICdub3JtYWxpemUnO1xuQGltcG9ydCAnaGVybyc7XG5AaW1wb3J0ICduYXZiYXInO1xuQGltcG9ydCAnd29yayc7XG5cbmJvZHkge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsMCwwKTtcbn1cblxuI2NvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogOTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */