/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
/* line 9, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
/* line 19, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
/* line 45, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
/* line 57, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
/* line 67, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
/* line 78, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
/* line 89, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
/* line 98, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
/* line 109, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
/* line 118, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
/* line 126, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
/* line 135, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
/* line 144, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
/* line 153, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
/* line 162, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

/* line 169, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
sup {
  top: -0.5em; }

/* line 173, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
/* line 184, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
/* line 192, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
/* line 203, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
/* line 211, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
/* line 221, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
/* line 232, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
/* line 256, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
/* line 266, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
/* line 278, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
/* line 293, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
/* line 303, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
/* line 312, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
/* line 322, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
/* line 335, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
/* line 347, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
/* line 357, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
/* line 371, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
/* line 379, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
/* line 390, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
/* line 399, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
/* line 408, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
/* line 419, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/* line 425, /Users/alexlu/Documents/Other/alx.lu/src/css/_normalize.scss */
td, th {
  padding: 0; }

/* line 1, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
#navbar {
  top: 0;
  width: 100%;
  height: 125px;
  display: block;
  position: fixed;
  background: white;
  font-size: 120%;
  z-index: 1000;
  font-family: 'Didot', 'Bodoni MT', serif; }

/* line 13, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
#navcontainer {
  margin: auto;
  margin-top: 85px;
  width: 80%;
  max-width: 1080px; }

/* line 20, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
.navmenu {
  list-style-type: none;
  padding: 0;
  margin: 0 auto;
  text-align: justify;
  width: 100%; }

/* line 28, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
.navmenu li {
  width: 150px;
  height: 100px;
  display: inline-block;
  text-align: center; }

/* line 35, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
.navmenu:after {
  content: '';
  width: 100%;
  display: inline-block; }

/* line 41, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
.navmenu li a {
  text-decoration: none;
  color: black; }

/* line 46, /Users/alexlu/Documents/Other/alx.lu/src/css/_navbar.scss */
.navmenu li a:hover {
  text-decoration: underline; }

/* line 5, /Users/alexlu/Documents/Other/alx.lu/src/css/app.scss */
h1 {
  font-family: 'Didot', 'Bodoni MT', serif;
  font-size: 1000%;
  text-align: center; }

/* line 11, /Users/alexlu/Documents/Other/alx.lu/src/css/app.scss */
#title {
  z-index: 10;
  width: 394px;
  height: 1.5em;
  font: 300 500%/1.2 'Didot', Times, serif;
  margin: auto;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0; }

/* line 24, /Users/alexlu/Documents/Other/alx.lu/src/css/app.scss */
#titleText {
  font-family: 'Didot', Times, serif;
  fill: url(#textBg); }

/* line 30, /Users/alexlu/Documents/Other/alx.lu/src/css/app.scss */
#subTitle {
  font-family: 'Didot', Times, serif;
  font-size: 130%;
  text-align: center;
  position: absolute;
  bottom: 250px;
  width: 100%;
  color: gray; }

/* line 40, /Users/alexlu/Documents/Other/alx.lu/src/css/app.scss */
.sectionTitle {
  font-family: 'Didot', Times, serif;
  color: gray;
  font-size: 200%;
  text-align: center;
  margin-top: 100px;
  margin-bottom: 100px; }

/* line 50, /Users/alexlu/Documents/Other/alx.lu/src/css/app.scss */
#heroImage {
  margin-top: 125px;
  background: url("../img/BackgroundBare.jpg") no-repeat center center;
  background-size: cover;
  width: 100%;
  height: 640px;
  position: relative; }

/* line 59, /Users/alexlu/Documents/Other/alx.lu/src/css/app.scss */
.proof {
  position: absolute;
  height: 5%;
  width: 3%;
  opacity: .2; }

/* line 66, /Users/alexlu/Documents/Other/alx.lu/src/css/app.scss */
.pr-top {
  border-bottom: 1px solid black;
  top: 2%; }

/* line 72, /Users/alexlu/Documents/Other/alx.lu/src/css/app.scss */
.pr-bottom {
  border-top: 1px solid black;
  bottom: 2%; }

/* line 77, /Users/alexlu/Documents/Other/alx.lu/src/css/app.scss */
.pr-left {
  border-right: 1px solid black;
  left: 2%; }

/* line 82, /Users/alexlu/Documents/Other/alx.lu/src/css/app.scss */
.pr-right {
  border-left: 1px solid black;
  right: 2%; }


/*# sourceMappingURL=data:application/json;base64, */